{"version":3,"sources":["components/Header/Header.js","components/MainImage/MainImage.js","components/AudioPlayer/AudioPlayer.js","components/ItemDescription/ItemDescription.js","components/PreviousNextLinks/PreviousNextLinks.js","data/data.js","components/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["Header","_ref","title","react_default","a","createElement","className","MainImage","fileName","src","alt","AudioPlayer","controls","autoplay","ItemDescription","description","PreviousNextLinks","previous","next","Link","to","data","intro","url","title_text","audio_text","audio_link","image_link","next_url","previous_url","r2d2","optimus_prime","rosie","the_iron_giant","wall_e","johnny_5","outro","Layout","pageData","Object","objectSpread","id","this","props","match","params","console","log","components_Header_Header","components_MainImage_MainImage","components_AudioPlayer_AudioPlayer","components_ItemDescription_ItemDescription","components_PreviousNextLinks_PreviousNextLinks","Component","App","BrowserRouter","ScrollMemory_min_default","Route","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2ce4622.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nconst Header = ({title}) => (\n  <header>\n    <h1 className=\"Header\">{title}</h1>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport './MainImage.css';\n\nconst MainImage = ({fileName}) => (\n  <img className=\"MainImage\" src={\"./images/\" + fileName} alt=\"\"/>\n);\n\nexport default MainImage;\n","import React from 'react';\nimport './AudioPlayer.css';\n\nconst AudioPlayer = ({fileName}) => (\n  <div className=\"AudioPlayer\">\n    <audio src={\"/audio/\" + fileName} controls autoplay=\"true\"></audio>\n  </div>\n);\n\nexport default AudioPlayer;\n","import React from 'react';\nimport './ItemDescription.css';\n\nconst ItemDescription = ({description}) => (\n  <div>\n    <p className=\"ItemDescription\">{description}</p>\n  </div>\n);\n\nexport default ItemDescription;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './PreviousNextLinks.css';\n\nconst PreviousNextLinks = ({previous, next}) => (\n  <div className=\"PreviousNextLinks\">\n    { previous && <Link to={\"/\" + previous}>Previous</Link> }\n    { next && <Link to={\"/\" + next}>Next</Link> }\n  </div>\n);\n\nexport default PreviousNextLinks;\n"," export default {\n   \"intro\": {\n     \"url\": \"intro\",\n     \"title_text\": \"UiPath Hall of Robots\",\n     \"audio_text\": \"Hi fellow Robot Enthusiast! Welcome to the UiPath Hall of Famous Robots!  I’m Justin LeClair and I’ll be your tour-guide to help move you along this fantastic audio journey through humanity's impressive and awe inspiring passion for awesome robots.\\nBuckle up, strap in and get ready for the UiPath Brooklyn Based Development team to drop some pop-culture robot knowledge on you.  When you’re ready, press the “Next” button at the bottom of your screen.\",\n     \"audio_link\": \"intro.m4a\",\n     \"image_link\": \"intro.png\",\n     \"next_url\": \"r2d2\",\n     \"previous_url\": \"\"\n   },\n   \"r2d2\": {\n     \"url\": \"r2d2\",\n     \"title_text\": \"R2-D2\",\n     \"audio_text\": \"R2D2 is a robot character in the Star Wars franchise created by George Lucas. A small astromech droid, R2-D2 is a major character and appears in nine out of the ten Star Wars films to date.  R2-D2 stands for Second Generation Robotic Droid Series-2.  In the first Star Wars movie released: A New Hope, R2-D2 is introduced on board the Tantive IV a Rebel Corellian Corvette, when they are fired upon by an Imperial Star Destroyer. A smart, spunky droid serving a multitude of masters over its lifetime, R2 never had a full memory wipe nor has he received new programming, with these factors resulting in an adventurous and independent attitude. Oftentimes finding himself in pivotal moments in galactic history, his bravery and ingenuity saved the galaxy time and time again.\",\n     \"audio_link\": \"r2d2.m4a\",\n     \"image_link\": \"r2d2.png\",\n     \"next_url\": \"optimus_prime\",\n     \"previous_url\": \"intro\"\n   },\n   \"optimus_prime\": {\n     \"url\": \"optimus_prime\",\n     \"title_text\": \"Optimus Prime\",\n     \"audio_text\": \"Optimus Prime is a robot superhero character from the Transformers franchise. He is the leader of the Autobots, a group of sentient self-configuring modular extraterrestrial robotic lifeforms.  Optimus Prime is depicted as having strong moral character, excellent leadership, and sound decision-making skills, and possesses brilliant military tactics, powerful martial arts, and advanced extraterrestrial weaponry. Optimus Prime has a strong sense of honor and justice, being dedicated to building peaceful and mutually beneficial coexistence with humans, the protection of life and liberty of all sentient species. As the current Matrix of Leadership bearer, Optimus Prime is the de facto leader of the Autobots, a faction of a transforming species of synthetic intelligence from the planet Cybertron. The Autobots are constantly waging civil war against a rival faction of transforming robots called Decepticons\",\n     \"audio_link\": \"optimus_prime.m4a\",\n     \"image_link\": \"optimus_prime.png\",\n     \"next_url\": \"rosie\",\n     \"previous_url\": \"r2d2\"\n   },\n   \"rosie\": {\n     \"url\": \"rosie\",\n     \"title_text\": \"Rosie\",\n     \"audio_text\": \"Rosie is the maid and housekeeper of the Jetson family. She is a model XB-500, an older model, but the only one U-Rent A Maid had that Jane could afford. The Jetsons is an American animated sitcom produced by Hanna-Barbera, originally airing in September 23, 1962. While the Flintstones lived in a world which was a comical version of the \\\"stone age\\\", with machines powered by birds and dinosaurs, the Jetsons live in a commercial version of the future, with elaborate robotic contraptions, aliens, holograms, and whimsical inventions.\",\n     \"audio_link\": \"rosie.m4a\",\n     \"image_link\": \"rosie.png\",\n     \"next_url\": \"the_iron_giant\",\n     \"previous_url\": \"optimus_prime\"\n   },\n   \"the_iron_giant\": {\n     \"url\": \"the_iron_giant\",\n     \"title_text\": \"The Iron Giant\",\n     \"audio_text\": \"The Iron Giant is a 1999 American animated science fiction film based on the 1968 novel The Iron Man by Ted Hughes. The character of the same name The Iron Giant, a fifty-foot, metal-eating robot. Created for an unknown purpose, the Giant involuntarily reacts defensively if he recognizes anything as a weapon, immediately attempting to destroy it. The Iron Giant who has a pleasant, inquisitive demeanor enters Hogarth's life and changes everything. With eyes that change color according to his mood, parts that transform and reassemble, and an innocent heart, he becomes a best friend, coolest toy, and immortal hero to Hogarth. He learns that you are who you choose to be and uses his strength for good rather that destruction, proving to the world that he recognizes the value of human life.\",\n     \"audio_link\": \"the_iron_giant.m4a\",\n     \"image_link\": \"the_iron_giant.png\",\n     \"next_url\": \"wall_e\",\n     \"previous_url\": \"rosie\"\n   },\n   \"wall_e\": {\n     \"url\": \"wall_e\",\n     \"title_text\": \"Wall-E\",\n     \"audio_text\": \"Wall-E is a  2008 American computer-animated science fiction film produced by Pixar Animation Studios.  In the 29th century, Earth has been abandoned and covered in garbage, its population having been evacuated by the megacorporation Buy-N-Large (BnL) on giant starliners seven centuries earlier after decades of mass consumerism facilitated by BnL. BnL has left behind WALL-E robot trash compactors to clean up; however, all have since stopped functioning, except one unit who has gained sentience and is scavenging parts from other units to remain active. \\n WALL-E was designed to be an environmentally-friendly garbage-processing robot. As such, he possesses many interesting devices to help him fulfill his directive. \\n He has twin, extending, hydraulic arm shovels with articulated fingers mounted on U-shaped tracks to his sides. Super-high-efficiency solar panels unfold from the top of his chest and recharge the batteries contained adjacent to his control system. Two powerful hydraulic presses on his back operate his compactor function, compressing trash in his body cavity into neat cubes that can be easily stacked and carted away. \",\n     \"audio_link\": \"wall_e.m4a\",\n     \"image_link\": \"wall_e.jpg\",\n     \"next_url\": \"johnny_5\",\n     \"previous_url\": \"the_iron_giant\"\n   },\n   \"johnny_5\": {\n     \"url\": \"johnny_5\",\n     \"title_text\": \"Johnny 5\",\n     \"audio_text\": \"Short Circuit is a 1986 US comic science fiction film directed by John Badham and written by S. S. Wilson and Brent Maddock. The film's plot centers upon an experimental military robot that is struck by lightning and gains a more human like intelligence, with which it embarks to explore its new state. Johnny 5 is a former military robot and is considered to be alive in the philosophical sense, as he has emotions and is self-aware. He is both puppeteered and voiced by Tim Blaney.\",\n     \"audio_link\": \"johnny_5.m4a\",\n     \"image_link\": \"johnny_5.jpg\",\n     \"next_url\": \"outro\",\n     \"previous_url\": \"wall_e\"\n   },\n   \"outro\": {\n     \"url\": \"outro\",\n     \"title_text\": \"Thanks for Coming!\",\n     \"audio_text\": \"Thanks for joining us today in UiPaths Hall of Famous Robots.  We believe the inspiration gained through the viewing of these cinematic superstars helps us strive to do our best.  Before you go I’d like to thank Kurt Petrek for coding this incredible interactive web experience as well as the rest of the team for their voice overs. (in order of appearance).  Kurt Petrek, Greg Guidone, Alexis Alexander, Joe Lasher, Chaya Schochet, and Louis Oscar\",\n     \"audio_link\": \"outro.m4a\",\n     \"image_link\": \"outro.png\",\n     \"previous_url\": \"johnny_5\"\n   }\n };\n","import React, { Component } from 'react';\nimport Header from './../Header/Header';\nimport MainImage from './../MainImage/MainImage';\nimport AudioPlayer from './../AudioPlayer/AudioPlayer';\nimport ItemDescription from './../ItemDescription/ItemDescription';\nimport PreviousNextLinks from './../PreviousNextLinks/PreviousNextLinks';\n\nimport data from './../../data/data';\n\nclass Layout extends Component {\n\n  render() {\n    var pageData = {...data.intro};\n    var id = this.props.match.params.id;\n\n    if (id && data[id]) {\n      pageData = {...data[id]};\n    }\n\n    console.log(this.props);\n    console.log(data);\n    console.log(pageData);\n\n    return (\n      <div>\n        <Header title={pageData.title_text} />\n        <MainImage fileName={pageData.image_link} />\n        <AudioPlayer fileName={pageData.audio_link} />\n        <ItemDescription description={pageData.audio_text} />\n        <PreviousNextLinks previous={pageData.previous_url} next={pageData.next_url}/>\n      </div>\n    )\n  }\n};\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport ScrollMemory from 'react-router-scroll-memory';\n\nimport Layout from './components/Layout/Layout';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <ScrollMemory />\n          <Route path=\"/\" exact component={Layout} />\n          <Route path=\"/:id\" component={Layout} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}